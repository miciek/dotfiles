# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# '.workspace':
#   'ctrl-P': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#

'atom-text-editor[data-grammar~="haskell"]':
  '': 'haskell-ghc-mod:check-file'
  '': 'haskell-ghc-mod:lint-file'
  'ctrl-shift-p': 'haskell-ghc-mod:show-type' #this is an example binding
  'ctrl-shift-i': 'haskell-ghc-mod:show-info' #this is an example binding
  'ctrl-shift-o': 'haskell-ghc-mod:insert-type' #this is an example binding
  '': 'haskell-ghc-mod:show-info-fallback-to-type'
  '': 'haskell-ghc-mod:insert-import'

'atom-workspace':
  '': 'haskell-ghc-mod:shutdown-backend'
  'cmd-f9': 'ide-haskell-cabal:build'
  '': 'ide-haskell-cabal:set-build-target'
  '': 'ide-haskell-cabal:clean'
  'cmd-f10': 'ide-haskell-cabal:test'
